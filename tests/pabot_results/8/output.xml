<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.7 on win32)" generated="20240129 22:06:53.559" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="C:\Users\HP\PycharmProjects\RobotFramework\tests">
<suite id="s1-s1" name="testDemo8" source="C:\Users\HP\PycharmProjects\RobotFramework\tests\testDemo8.robot">
<test id="s1-s1-t1" name="Play around Dictionary" line="12">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>name=rahul_shetty</arg>
<arg>course=robot_framework</arg>
<arg>website=rahulshettyacademy.com</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240129 22:06:53.845" level="INFO">&amp;{data} = { name=rahul_shetty | course=robot_framework | website=rahulshettyacademy.com }</msg>
<status status="PASS" starttime="20240129 22:06:53.845" endtime="20240129 22:06:53.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:53.845" level="INFO">{'name': 'rahul_shetty', 'course': 'robot_framework', 'website': 'rahulshettyacademy.com'}</msg>
<status status="PASS" starttime="20240129 22:06:53.845" endtime="20240129 22:06:53.845"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${data}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240129 22:06:53.845" endtime="20240129 22:06:53.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}[name]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:53.858" level="INFO">rahul_shetty</msg>
<status status="PASS" starttime="20240129 22:06:53.858" endtime="20240129 22:06:53.858"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${course_name}</var>
<arg>${data}</arg>
<arg>course</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20240129 22:06:53.858" level="INFO">${course_name} = robot_framework</msg>
<status status="PASS" starttime="20240129 22:06:53.858" endtime="20240129 22:06:53.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${course_name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:53.858" level="INFO">robot_framework</msg>
<status status="PASS" starttime="20240129 22:06:53.858" endtime="20240129 22:06:53.858"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20240129 22:06:53.845" endtime="20240129 22:06:53.858"/>
</test>
<test id="s1-s1-t2" name="Add book into the database" line="21">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>name=${book_name}</arg>
<arg>isbn=987655</arg>
<arg>aisle=321097</arg>
<arg>author=rahulshetty</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240129 22:06:53.865" level="INFO">&amp;{req_body} = { name=RobotFramework | isbn=987655 | aisle=321097 | author=rahulshetty }</msg>
<status status="PASS" starttime="20240129 22:06:53.865" endtime="20240129 22:06:53.865"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}/Library/Addbook.php</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240129 22:06:55.299" level="INFO">POST Request : url=https://www.rahulshettyacademy.com//Library/Addbook.php 
 path_url=//Library/Addbook.php 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/json'} 
 body=b'{"name": "RobotFramework", "isbn": "987655", "aisle": "321097", "author": "rahulshetty"}' 
 </msg>
<msg timestamp="20240129 22:06:55.299" level="INFO">POST Response : url=https://www.rahulshettyacademy.com//Library/Addbook.php 
 status=200, reason=OK 
 headers={'Date': 'Mon, 29 Jan 2024 16:36:55 GMT', 'Server': 'Apache/2.4.52 (Ubuntu)', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With', 'Content-Length': '48', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"Msg":"successfully added","ID":"987655321097"} 
 </msg>
<msg timestamp="20240129 22:06:55.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240129 22:06:53.865" endtime="20240129 22:06:55.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:55.299" level="INFO">{'Msg': 'successfully added', 'ID': '987655321097'}</msg>
<status status="PASS" starttime="20240129 22:06:55.299" endtime="20240129 22:06:55.299"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>ID</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240129 22:06:55.299" endtime="20240129 22:06:55.299"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${book_id}</var>
<arg>${response.json()}</arg>
<arg>ID</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20240129 22:06:55.299" level="INFO">${book_id} = 987655321097</msg>
<status status="PASS" starttime="20240129 22:06:55.299" endtime="20240129 22:06:55.299"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${book_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240129 22:06:55.315" level="INFO">${book_id} = 987655321097</msg>
<status status="PASS" starttime="20240129 22:06:55.299" endtime="20240129 22:06:55.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${book_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:55.315" level="INFO">987655321097</msg>
<status status="PASS" starttime="20240129 22:06:55.315" endtime="20240129 22:06:55.315"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>successfully added</arg>
<arg>${response.json()}[Msg]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240129 22:06:55.315" endtime="20240129 22:06:55.315"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20240129 22:06:55.315" endtime="20240129 22:06:55.323"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20240129 22:06:53.858" endtime="20240129 22:06:55.323"/>
</test>
<test id="s1-s1-t3" name="Get the book details which you added" line="34">
<kw name="GET" library="RequestsLibrary">
<var>${get_response}</var>
<arg>${base_url}/Library/GetBook.php</arg>
<arg>params=ID=${book_id}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240129 22:06:55.553" level="INFO">GET Request : url=https://www.rahulshettyacademy.com//Library/GetBook.php?ID=987655321097 
 path_url=//Library/GetBook.php?ID=987655321097 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240129 22:06:55.553" level="INFO">GET Response : url=https://www.rahulshettyacademy.com//Library/GetBook.php?ID=987655321097 
 status=200, reason=OK 
 headers={'Date': 'Mon, 29 Jan 2024 16:36:55 GMT', 'Server': 'Apache/2.4.52 (Ubuntu)', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With', 'Content-Length': '88', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body=[{"book_name":"RobotFramework","isbn":"987655","aisle":"321097","author":"rahulshetty"}] 
 </msg>
<msg timestamp="20240129 22:06:55.553" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240129 22:06:55.323" endtime="20240129 22:06:55.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${get_response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:55.553" level="INFO">[{'book_name': 'RobotFramework', 'isbn': '987655', 'aisle': '321097', 'author': 'rahulshetty'}]</msg>
<status status="PASS" starttime="20240129 22:06:55.553" endtime="20240129 22:06:55.553"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${book_name}</arg>
<arg>${get_response.json()}[0][book_name]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240129 22:06:55.553" endtime="20240129 22:06:55.570"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20240129 22:06:55.323" endtime="20240129 22:06:55.570"/>
</test>
<test id="s1-s1-t4" name="Delete the book from database" line="41">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{delete_req}</var>
<arg>ID=${book_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240129 22:06:55.570" level="INFO">&amp;{delete_req} = { ID=987655321097 }</msg>
<status status="PASS" starttime="20240129 22:06:55.570" endtime="20240129 22:06:55.570"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${delete_response}</var>
<arg>${base_url}/Library/DeleteBook.php</arg>
<arg>json=${delete_req}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240129 22:06:55.988" level="INFO">POST Request : url=https://www.rahulshettyacademy.com//Library/DeleteBook.php 
 path_url=//Library/DeleteBook.php 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '22', 'Content-Type': 'application/json'} 
 body=b'{"ID": "987655321097"}' 
 </msg>
<msg timestamp="20240129 22:06:55.988" level="INFO">POST Response : url=https://www.rahulshettyacademy.com//Library/DeleteBook.php 
 status=200, reason=OK 
 headers={'Date': 'Mon, 29 Jan 2024 16:36:56 GMT', 'Server': 'Apache/2.4.52 (Ubuntu)', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With', 'Content-Length': '38', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"msg":"book is successfully deleted"} 
 </msg>
<msg timestamp="20240129 22:06:55.988" level="INFO">${delete_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240129 22:06:55.570" endtime="20240129 22:06:55.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${delete_response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240129 22:06:56.004" level="INFO">{'msg': 'book is successfully deleted'}</msg>
<status status="PASS" starttime="20240129 22:06:55.988" endtime="20240129 22:06:56.004"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>book is successfully deleted</arg>
<arg>${delete_response.json()}[msg]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240129 22:06:56.004" endtime="20240129 22:06:56.004"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20240129 22:06:55.570" endtime="20240129 22:06:56.004"/>
</test>
<status status="PASS" starttime="20240129 22:06:53.644" endtime="20240129 22:06:56.004"/>
</suite>
<status status="PASS" starttime="20240129 22:06:53.591" endtime="20240129 22:06:56.011"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">API</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="testDemo8">Tests.testDemo8</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
